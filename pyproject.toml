[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=40",
]

[project]
name = "pytest-rerunfailures"
version = "16.2.dev0"
description = "pytest plugin to re-run tests to eliminate flaky failures"
keywords = [
  "failures",
  "flaky",
  "pytest",
  "rerun",
]
license.text = "MPL-2.0"
authors = [ { name = "Leah Klearman", email = "lklrmn@gmail.com" } ]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Quality Assurance",
  "Topic :: Software Development :: Testing",
  "Topic :: Utilities",
]
dynamic = [
  "readme",
]
dependencies = [
  "packaging>=17.1",
  "pytest!=8.2.2,>=7.4",
]
urls = { Homepage = "https://github.com/pytest-dev/pytest-rerunfailures" }

entry-points.pytest11.rerunfailures = "pytest_rerunfailures"

[tool.setuptools.dynamic]
readme = { file = [ "HEADER.rst", "README.rst", "CHANGES.rst" ] }

[tool.ruff]
fix = true
lint.select = [
  "E",  # https://pypi.org/project/pyflakes/
  "F",  # https://pypi.org/project/pyflakes/
  "I",  # https://pypi.org/project/isort/
  "S",  # https://pypi.org/project/flake8-bandit/
  "UP", # https://pypi.org/project/upgrade-checker/
  "W",  # https://pypi.org/project/pycodestyle/
]

lint.per-file-ignores."test_*.py" = [ "S101", "S311" ]
lint.isort.known-first-party = [ "pytest_rerunfailures" ]
# Unlike Flake8, default to a complexity level of 10.
lint.mccabe.max-complexity = 10
# Use Google-style docstrings.
lint.pydocstyle.convention = "google"

[tool.check-manifest]
ignore = [ ".pre-commit-config.yaml" ]
